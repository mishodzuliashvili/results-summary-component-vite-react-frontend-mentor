// we can organize css by headers, Something like that:

// || RESET
// have headers is good for you and your team
// ctrl + shift + p + sort alphabetically can help you find properties easily
// follow the naming convention - one of them is BEM - BLOCK, ELEMENT, MODIFIER

// remove default styles
* {
    /* don't use '0px' or any other unit, if you set the value to zero */
    // we use 0 because it is more readable. In fact, many CSS experts recommend using the shorthand notation wherever possible to keep your code concise and easier to read.
    padding: 0;
    margin: 0;
    border: 0;
    box-sizing: border-box;
}
button {
    font: inherit;
}
// :root is pseudo-class that targets the highest-level element in the document tree which is normally html element
// commonly used for global variables
:root {
    --mobile: 375px;
    --desktop: 1440px;

    // ### Primary

    --light-red: 0, 100%, 67%;
    --orangey-yellow: 39, 100%, 56%;
    --green-teal: 166, 100%, 37%;
    --cobalt-blue: 234, 85%, 45%;

    // ## Gradients

    --light-slate-blue-background: hsl(252, 100%, 67%);
    --light-royal-blue-background: hsl(241, 81%, 54%);

    --violet-blue-circle: hsla(256, 72%, 46%, 1);
    --persian-blue-circle: hsla(241, 72%, 46%, 0);

    // ### Neutral

    --white: hsl(0, 0%, 100%);
    --pale-blue: hsl(221, 100%, 96%);
    --light-lavender: hsl(241, 100%, 89%);
    --dark-gray-blue: hsl(224, 30%, 27%);

    // ### Notes

    // Use transparency to get the colour variations necessary to match the design. Hint: look into using `hsla()`.

    // ## Typography

    // ### Body Copy

    --font-size-paragraphs: 1.125rem;

    // ### Font
    @font-face {
        font-family: "Hanken Grotesk";
        src: url("./assets/fonts/HankenGrotesk-VariableFont_wght.ttf");
    }

    // - Family: [Hanken Grotesk](https://fonts.google.com/specimen/Hanken+Grotesk)
    // Weights: 500, 700, 800

}



// The *:before and *:after pseudo-elements in CSS can be used to add content before or after
//  an element's actual content. These pseudo-elements are commonly used to add decorative
// elements, icons, or text to an element, without changing the HTML markup.
// Note that *:before and *:after pseudo-elements are not part of the actual DOM, and therefore cannot be accessed or manipulated using JavaScript.

// counter-reset: my-counter;
// counter-increment: my-counter; xD can be useful dunno


html {
    font-size: 13px;
    /* base font size */

    line-height: 1.5;
}

/* Global styles */
body {
    font-family: "Hanken Grotesk", sans-serif;
    font-size: 1rem;
    font-weight: 500;
    /* equivalent to 16px */
    line-height: 1.5;
    /* equivalent to 24px */
    min-height: 100vh;
    display: grid;
    justify-content: center;
    align-items: center;
}

h1 {
    font-size: 1.8rem;
    /* equivalent to 40px */
    line-height: 1.2;
    /* equivalent to 48px */
}
h2 {
    font-size: 1.45rem;
    /* equivalent to 40px */
    line-height: 1.0;
    /* equivalent to 48px */
}

p {
    font-size: 1.2rem;
    /* equivalent to 16px */
    line-height: 1.5;
    /* equivalent to 24px */
}

@media screen and (min-width: 768px) {
    html {
        font-size: 14px;
        /* base font size for larger screens */
    }
}

@media screen and (min-width: 1024px) {
    html {
        font-size: 16px;
        /* base font size for extra-large screens */
    }
}

// main{

// }

.summary-component-wrapper{
    display: grid;
    grid-template: 1fr / minmax(auto, 425px);
    background-color: var(--white);
    box-shadow: 0 .5rem 2rem 0 rgba(0, 0, 0, 0.1);
    .result{
        color: var(--light-lavender);
        background: linear-gradient(var(--light-slate-blue-background), var(--light-royal-blue-background));
        border-radius: 0 0 1.5rem 1.5rem;
        text-align: center;
        padding: 3rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        &__heading{

        }
        &__score{
            width: 150px;
            height: 150px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: linear-gradient(var(--violet-blue-circle), var(--persian-blue-circle));
            border-radius: 500px;
            margin: 1.5rem 0;
        }
        &__get-score{
            color: var(--white);
            font-size: 3.75rem;
            font-weight: 800;
        }
        &__full-score{
            
        }
        &__title{
        color: var(--white);
        font-weight: 700; 
        }
        &__description{
            // font-weight: 500;
        }
    }
    .summary{
        padding: 3rem;
        color: var(--dark-gray-blue);
        font-weight: 500;
        display: grid;
        gap: 1rem;

        &__heading{

        }
        &__list{
            // font-weight: 500;
            list-style: none;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        &__item{
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-radius: 0.3rem;
            padding: 1rem;
            &--red{
                color: hsl(var(--light-red));
                background-color: hsla(var(--light-red), 0.05);
            }
            &--yellow{
                color: hsl(var(--orangey-yellow));
                background-color: hsla(var(--orangey-yellow), 0.05);
            }
            &--teal{
                color: hsl(var(--green-teal));
                background-color: hsla(var(--green-teal), 0.05);
            }
            &--blue{
                color: hsl(var(--cobalt-blue));
                background-color: hsla(var(--cobalt-blue), 0.05);
            }
        }
        &__title{
            display: flex;
            // justify-content: center;
            align-items: center;
            gap: 1rem;
        }
        &__icon{

        }
        &__text{

        }
        &__score{
            color: hsla(224, 30%, 27%, .5)
        }
        &__score-point{
            color: var(--dark-gray-blue);
        }
        &__button{
            background-color: var(--dark-gray-blue);
            color: var(--white);
            padding: 0.5rem 0;
            font-weight: 700;
            border-radius: 1.5rem;
            font-size: 1.2rem;
            cursor: pointer;
            &:hover{
                opacity: 0.8;
                transition: all 0.3s ease-in-out;
            }
        }
    }

    @media (min-width: 750px) {
        grid-template: 1fr / minmax(auto, 350px) minmax(auto, 350px);
        border-radius: 1.5rem;
        .result{
            border-radius: 1.5rem;
        }
    }
}